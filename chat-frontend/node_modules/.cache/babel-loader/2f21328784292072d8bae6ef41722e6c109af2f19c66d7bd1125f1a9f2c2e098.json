{"ast":null,"code":"var _jsxFileName = \"D:\\\\updev\\\\chat-frontend\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleAuth = async () => {\n    const endpoint = isRegistering ? \"register\" : \"login\";\n    const response = await fetch(`http://127.0.0.1:8000/${endpoint}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      onLogin(username);\n      localStorage.setItem(\"username\", username);\n    } else {\n      setError(data.detail);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: isRegistering ? \"Inscription\" : \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nom d'utilisateur\",\n      className: \"border p-2 w-full mt-2\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Mot de passe\",\n      className: \"border p-2 w-full mt-2\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAuth,\n      className: \"bg-blue-500 text-white p-2 mt-2 w-full\",\n      children: isRegistering ? \"S'inscrire\" : \"Se connecter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRegistering(!isRegistering),\n      className: \"text-blue-500 mt-2\",\n      children: isRegistering ? \"Déjà un compte ? Connectez-vous\" : \"Pas encore de compte ? Inscrivez-vous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"lZWUtQ9cmhreZshtNGoXVawlQIM=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Login","onLogin","_s","username","setUsername","password","setPassword","isRegistering","setIsRegistering","error","setError","handleAuth","endpoint","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/updev/chat-frontend/src/Login.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Login = ({ onLogin }) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isRegistering, setIsRegistering] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleAuth = async () => {\r\n        const endpoint = isRegistering ? \"register\" : \"login\";\r\n        const response = await fetch(`http://127.0.0.1:8000/${endpoint}`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ username, password }),\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n            onLogin(username);\r\n            localStorage.setItem(\"username\", username);\r\n        } else {\r\n            setError(data.detail);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-4 max-w-md mx-auto\">\r\n            <h1 className=\"text-xl font-bold\">{isRegistering ? \"Inscription\" : \"Connexion\"}</h1>\r\n            {error && <p className=\"text-red-500\">{error}</p>}\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Nom d'utilisateur\"\r\n                className=\"border p-2 w-full mt-2\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Mot de passe\"\r\n                className=\"border p-2 w-full mt-2\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button onClick={handleAuth} className=\"bg-blue-500 text-white p-2 mt-2 w-full\">\r\n                {isRegistering ? \"S'inscrire\" : \"Se connecter\"}\r\n            </button>\r\n            <button onClick={() => setIsRegistering(!isRegistering)} className=\"text-blue-500 mt-2\">\r\n                {isRegistering ? \"Déjà un compte ? Connectez-vous\" : \"Pas encore de compte ? Inscrivez-vous\"}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}